;; This file is automatically generated by the multiple-cursors extension.
;; It keeps track of your preferences for running commands with multiple cursors.

(setq mc/cmds-to-run-for-all
      '(
        avy-goto-char-in-line
        backward-kill-sexp
        backward-sexp
        backward-up-list
        c-electric-brace
        c-electric-colon
        c-electric-delete-forward
        c-electric-lt-gt
        c-electric-paren
        c-electric-semi&comma
        c-electric-slash
        c-electric-star
        capitalize-dwim
        clean-aindent--bsunindent
        delete-char
        delete-horizontal-space
        delete-indentation
        down-list
        downcase-dwim
        downcase-region
        eod-decrement-number-at-point
        eod-haskell-mode-insert-undefined-at-point
        eod-increment-number-at-point
        eod-insert-dollar
        eod-insert-parentheses
        eod-join-next-line
        eval-expression
        eval-last-sexp
        eval-sexp-and-replace
        forward-sexp
        haskell-indentation-common-electric-command
        haskell-indentation-newline-and-indent
        haskell-mode-contextual-space
        helm-M-x
        helm-show-kill-ring
        insert-parentheses
        isearch-forward-regexp
        isearch-printing-char
        isearch-repeat-forward
        kill-region
        kill-sexp
        lispy-braces
        lispy-brackets
        lispy-delete
        lispy-kill
        lispy-parens
        lispy-quotes
        mark-sexp
        mark-word
        org-beginning-of-line
        org-delete-char
        org-demote-subtree
        org-end-of-line
        org-metaright
        org-return
        org-return-indent
        org-self-insert-command
        org-yank
        paredit-backward
        paredit-backward-kill-word
        paredit-backward-up
        paredit-delete-region
        paredit-doublequote
        paredit-forward
        paredit-forward-delete
        paredit-forward-down
        paredit-forward-kill-word
        paredit-forward-slurp-sexp
        paredit-forward-up
        paredit-kill
        paredit-newline
        paredit-open-round
        paredit-open-square
        paredit-raise-sexp
        paredit-semicolon
        paredit-wrap-round
        rectangle-number-lines
        repeat
        repeat-complex-command
        sh-assignment
        shm/:
        shm/backward-node
        shm/close-paren
        shm/comma
        shm/copy-region
        shm/del
        shm/delete-indentation
        shm/double-quote
        shm/forward-node
        shm/hash
        shm/hyphen
        shm/insert-undefined
        shm/mark-node
        shm/open-brace
        shm/open-bracket
        shm/open-paren
        shm/raise
        shm/space
        shm/splice
        shm/split-line
        shm/wrap-parens
        shm/yank
        smarter-move-beginning-of-line
        sp-backward-down-sexp
        sp-backward-sexp
        sp-backward-up-sexp
        sp-delete-char
        sp-down-sexp
        sp-forward-sexp
        sp-forward-slurp-sexp
        sp-join-sexp
        sp-remove-active-pair-overlay
        sp-rewrap-sexp
        sp-splice-sexp
        sp-splice-sexp-killing-around
        sp-split-sexp
        sp-up-sexp
        special-digit-argument
        special-lh-knight/body
        special-lispy-ace-char
        special-lispy-ace-paren
        special-lispy-ace-subword
        special-lispy-ace-symbol
        special-lispy-ace-symbol-replace
        special-lispy-alt-multiline
        special-lispy-back
        special-lispy-barf
        special-lispy-beginning-of-defun
        special-lispy-clone
        special-lispy-convolute
        special-lispy-different
        special-lispy-down
        special-lispy-down-slurp
        special-lispy-edebug-stop
        special-lispy-ediff-regions
        special-lispy-eval
        special-lispy-eval-and-insert
        special-lispy-eval-other-window
        special-lispy-flatten
        special-lispy-flow
        special-lispy-follow
        special-lispy-goto
        special-lispy-goto-def-ace
        special-lispy-goto-def-down
        special-lispy-goto-local
        special-lispy-goto-mode
        special-lispy-goto-projectile
        special-lispy-goto-recursive
        special-lispy-join
        special-lispy-left
        special-lispy-mark-list
        special-lispy-move-down
        special-lispy-move-left
        special-lispy-move-right
        special-lispy-move-up
        special-lispy-multiline
        special-lispy-narrow
        special-lispy-new-copy
        special-lispy-occur
        special-lispy-oneline
        special-lispy-other-space
        special-lispy-outline-goto-child
        special-lispy-outline-next
        special-lispy-outline-prev
        special-lispy-paste
        special-lispy-quit
        special-lispy-raise
        special-lispy-raise-some
        special-lispy-repeat
        special-lispy-right
        special-lispy-shifttab
        special-lispy-slurp
        special-lispy-space
        special-lispy-splice
        special-lispy-stringify
        special-lispy-tab
        special-lispy-teleport
        special-lispy-tilde
        special-lispy-to-cond
        special-lispy-to-defun
        special-lispy-to-ifs
        special-lispy-to-lambda
        special-lispy-undo
        special-lispy-up
        special-lispy-up-slurp
        special-lispy-view
        special-lispy-visit
        special-lispy-widen
        special-lispy-x
        special-pop-tag-mark
        special-swiper
        split-line
        tab-to-tab-stop
        transpose-sexps
        transpose-words
        upcase-dwim
        upcase-region
        yank-rectangle
        yas-expand
        zap-up-to-char
        ))

(setq mc/cmds-to-run-once
      '(
        beginning-of-buffer
        copy-rectangle-as-kill
        end-of-buffer
        haskell-process-load-file
        helm-mini
        isearch-delete-char
        kmacro-end-and-call-macro
        kmacro-end-or-call-macro
        kmacro-start-macro-or-insert-counter
        lispy-cursor-down
        lispy-delete-backward
        move-to-window-line-top-bottom
        occur
        shm/backward-kill-word
        special-lispy-other-mode
        view-lossage
        ))
